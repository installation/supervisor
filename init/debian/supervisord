#!/bin/sh

# SUPERVISORD
# Maintainer: @sagikazarmark
# App Version: 3.0


### BEGIN INIT INFO
# Provides:          supervisord
# Required-Start:    $local_fs $remote_fs $network $named
# Required-Stop:     $local_fs $remote_fs $network $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop supervisor
# Description:       Start/stop supervisor daemon and its configured
#                    subprocesses.
### END INIT INFO

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
. /lib/lsb/init-functions


PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=supervisord
DESC="Supervisor daemon"
PIDFILE=/var/run/$NAME.pid
DODTIME=5
DAEMON=/usr/bin/$NAME
DAEMON_OPTS="-c /etc/$NAME.conf"
SUPERVISORCTL=/usr/bin/supervisorctl

test -x $DAEMON || exit 1
test -x $SUPERVISORCTL || exit 1

if [ $(id -u) -ne 0 ]; then
	echo "This script must be run as root"
	exit 1
fi

# Include supervisor defaults if available
if [ -f /etc/default/supervisor ] ; then
	. /etc/default/supervisor
fi


running()
{
	[ ! -f "$PIDFILE" ] && return 1

	pid=`cat $PIDFILE`
	proc=$(pidofproc $DAEMON)
	[ $proc -eq $pid ] || return 1
	return 0
}

do_start()
{
	if ! running; then
		log_daemon_msg "Starting $DESC" "$NAME"
		$DAEMON --pidfile $PIDFILE $DAEMON_OPTS > /dev/null
		test -f $PIDFILE || sleep 1
		if running; then
			log_end_msg 0
		else
			log_end_msg 1
		fi
	else
		log_warning_msg "$DESC is currently running!"
	fi
}

do_stop()
{
	if running; then
		log_daemon_msg "Stopping $DESC " "$NAME"
		$SUPERVISORCTL $DAEMON_OPTS shutdown > /dev/null
		test -f $PIDFILE || [ -n "$DODTIME" ] && sleep "$DODTIME"s
		if running; then
			log_end_msg 1
		else
			log_end_msg 0
		fi
	else
		log_warning_msg "$DESC is currently not running!"
	fi
}

do_force_stop()
{
	if running; then
		echo -n "Forcefully stopping $DESC: "
		$SUPERVISORCTL $DAEMON_OPTS shutdown > /dev/null
		[ -n "$DODTIME" ] && sleep "$DODTIME"s
		if running; then
			kill -9 $pid
			[ -n "$DODTIME" ] && sleep "$DODTIME"s
			if running; then
			log_failure_msg "Cannot kill $DESC (pid=$pid)!"
			log_end_msg 1
			else
				rm -f $PIDFILE
				log_end_msg 0
			fi
		else
			rm -f $PIDFILE
			log_end_msg 0
		fi
	else
		log_warning_msg "$DESC is currently not running!"
	fi
}

do_reload()
{
	if running; then
		log_daemon_msg "Reloading $DESC " "$NAME"
		$SUPERVISORCTL $DAEMON_OPTS update > /dev/null
		if running; then
			log_end_msg 0
		else
			log_end_msg 1
		fi
	else
		log_warning_msg "$DESC is currently not running!"
	fi
}

do_restart()
{
	if running; then
		log_daemon_msg "Restarting $DESC: "
		$SUPERVISORCTL $DAEMON_OPTS reload > /dev/null
		test -f $PIDFILE || sleep 1
		if running; then
			log_end_msg 0
		else
			log_end_msg 1
		fi
	else
		log_warning_msg "$DESC is currently not running!"
	fi
}

do_status()
{
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
}

case "$1" in
	start )
		do_start
		;;
	stop )
		do_stop
		;;
	restart )
		do_restart
		;;
	reload )
		do_reload
		;;
	status )
		do_status
		;;
	force-stop )
		do_force_stop
		;;
	force-reload )
		restart
		;;
	*)
		log_daemon_msg "Usage: service $NAME {start|stop|restart|reload|status|force-stop|force-reload}" >&2
		exit 1
		;;
esac

exit 0
